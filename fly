-- 简化版 STELLAR UI 库
if (game:GetService("CoreGui")):FindFirstChild("STELLAR") then
	(game:GetService("CoreGui")).STELLAR:Destroy();
end;

_G.Primary = Color3.fromRGB(100, 100, 100);
_G.Dark = Color3.fromRGB(22, 22, 26);
_G.Third = Color3.fromRGB(255, 0, 0);

-- 基础函数
function CreateRounded(Parent, Size)
	local Rounded = Instance.new("UICorner");
	Rounded.Name = "Rounded";
	Rounded.Parent = Parent;
	Rounded.CornerRadius = UDim.new(0, Size);
end;

local UserInputService = game:GetService("UserInputService");
local TweenService = game:GetService("TweenService");

-- 拖拽功能
function MakeDraggable(topbarobject, object)
	local Dragging = nil;
	local DragInput = nil;
	local DragStart = nil;
	local StartPosition = nil;
	
	local function Update(input)
		local Delta = input.Position - DragStart;
		local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y);
		local Tween = TweenService:Create(object, TweenInfo.new(0.15), {Position = pos});
		Tween:Play();
	end;
	
	topbarobject.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			Dragging = true;
			DragStart = input.Position;
			StartPosition = object.Position;
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					Dragging = false;
				end;
			end);
		end;
	end);
	
	topbarobject.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			DragInput = input;
		end;
	end);
	
	UserInputService.InputChanged:Connect(function(input)
		if input == DragInput and Dragging then
			Update(input);
		end;
	end);
end;

-- 通知系统
local NotificationFrame = Instance.new("ScreenGui");
NotificationFrame.Name = "NotificationFrame";
NotificationFrame.Parent = game.CoreGui;
NotificationFrame.ZIndexBehavior = Enum.ZIndexBehavior.Global;

local NotificationList = {};

local function RemoveOldestNotification()
	if #NotificationList > 0 then
		local removed = table.remove(NotificationList, 1);
		removed[1]:TweenPosition(UDim2.new(0.5, 0, -0.2, 0), "Out", "Quad", 0.4, true, function()
			removed[1]:Destroy();
		end);
	end;
end;

spawn(function()
	while wait() do
		if #NotificationList > 0 then
			wait(2);
			RemoveOldestNotification();
		end;
	end;
end);

-- 主库
local Update = {};

function Update:Notify(desc)
	local Frame = Instance.new("Frame");
	local Image = Instance.new("ImageLabel");
	local Title = Instance.new("TextLabel");
	local Desc = Instance.new("TextLabel");
	local OutlineFrame = Instance.new("Frame");
	
	OutlineFrame.Name = "OutlineFrame";
	OutlineFrame.Parent = NotificationFrame;
	OutlineFrame.ClipsDescendants = true;
	OutlineFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30);
	OutlineFrame.AnchorPoint = Vector2.new(0.5, 1);
	OutlineFrame.BackgroundTransparency = 0.4;
	OutlineFrame.Position = UDim2.new(0.5, 0, -0.2, 0);
	OutlineFrame.Size = UDim2.new(0, 300, 0, 60);
	
	Frame.Name = "Frame";
	Frame.Parent = OutlineFrame;
	Frame.ClipsDescendants = true;
	Frame.AnchorPoint = Vector2.new(0.5, 0.5);
	Frame.BackgroundColor3 = _G.Dark;
	Frame.BackgroundTransparency = 0.1;
	Frame.Position = UDim2.new(0.5, 0, 0.5, 0);
	Frame.Size = UDim2.new(0, 290, 0, 50);
	
	Title.Parent = Frame;
	Title.BackgroundColor3 = _G.Primary;
	Title.BackgroundTransparency = 1;
	Title.Position = UDim2.new(0, 10, 0, 8);
	Title.Size = UDim2.new(0, 200, 0, 20);
	Title.Font = Enum.Font.GothamBold;
	Title.Text = "STELLAR";
	Title.TextColor3 = Color3.fromRGB(255, 255, 255);
	Title.TextSize = 14;
	Title.TextXAlignment = Enum.TextXAlignment.Left;
	
	Desc.Parent = Frame;
	Desc.BackgroundColor3 = _G.Primary;
	Desc.BackgroundTransparency = 1;
	Desc.Position = UDim2.new(0, 10, 0, 28);
	Desc.Size = UDim2.new(0, 200, 0, 10);
	Desc.Font = Enum.Font.GothamSemibold;
	Desc.TextTransparency = 0.3;
	Desc.Text = desc;
	Desc.TextColor3 = Color3.fromRGB(200, 200, 200);
	Desc.TextSize = 11;
	Desc.TextXAlignment = Enum.TextXAlignment.Left;
	
	CreateRounded(Frame, 8);
	CreateRounded(OutlineFrame, 10);
	
	OutlineFrame:TweenPosition(UDim2.new(0.5, 0, 0.1 + (#NotificationList) * 0.08, 0), "Out", "Quad", 0.4, true);
	table.insert(NotificationList, {OutlineFrame});
end;

-- 窗口创建
function Update:Window(Config)
	assert(Config.SubTitle, "需要副标题");
	
	local WindowConfig = {
		Size = Config.Size,
		TabWidth = Config.TabWidth or 120
	};
	
	local uihide = false;
	local currentpage = "";
	
	local STELLAR = Instance.new("ScreenGui");
	STELLAR.Name = "STELLAR";
	STELLAR.Parent = game.CoreGui;
	STELLAR.DisplayOrder = 999;
	
	local Main = Instance.new("Frame");
	Main.Name = "Main";
	Main.Parent = STELLAR;
	Main.ClipsDescendants = true;
	Main.AnchorPoint = Vector2.new(0.5, 0.5);
	Main.BackgroundColor3 = Color3.fromRGB(24, 24, 26);
	Main.BackgroundTransparency = 0;
	Main.Position = UDim2.new(0.5, 0, 0.5, 0);
	Main.Size = WindowConfig.Size;
	CreateRounded(Main, 10);
	
	local Top = Instance.new("Frame");
	Top.Name = "Top";
	Top.Parent = Main;
	Top.BackgroundColor3 = Color3.fromRGB(18, 18, 20);
	Top.Size = UDim2.new(1, 0, 0, 35);
	Top.BackgroundTransparency = 0;
	CreateRounded(Top, 8);
	
	local NameHub = Instance.new("TextLabel");
	NameHub.Name = "NameHub";
	NameHub.Parent = Top;
	NameHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	NameHub.BackgroundTransparency = 1;
	NameHub.Position = UDim2.new(0, 15, 0.5, 0);
	NameHub.AnchorPoint = Vector2.new(0, 0.5);
	NameHub.Size = UDim2.new(0, 1, 0, 20);
	NameHub.Font = Enum.Font.GothamBold;
	NameHub.Text = "STELLAR";
	NameHub.TextSize = 16;
	NameHub.TextColor3 = Color3.fromRGB(255, 255, 255);
	NameHub.TextXAlignment = Enum.TextXAlignment.Left;
	
	local nameHubSize = (game:GetService("TextService")):GetTextSize(NameHub.Text, NameHub.TextSize, NameHub.Font, Vector2.new(math.huge, math.huge));
	NameHub.Size = UDim2.new(0, nameHubSize.X, 0, 20);
	
	local SubTitle = Instance.new("TextLabel");
	SubTitle.Name = "SubTitle";
	SubTitle.Parent = NameHub;
	SubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	SubTitle.BackgroundTransparency = 1;
	SubTitle.Position = UDim2.new(0, nameHubSize.X + 5, 0.5, 0);
	SubTitle.Size = UDim2.new(0, 1, 0, 15);
	SubTitle.Font = Enum.Font.Gotham;
	SubTitle.AnchorPoint = Vector2.new(0, 0.5);
	SubTitle.Text = Config.SubTitle;
	SubTitle.TextSize = 12;
	SubTitle.TextColor3 = Color3.fromRGB(150, 150, 150);
	
	local CloseButton = Instance.new("TextButton");
	CloseButton.Name = "CloseButton";
	CloseButton.Parent = Top;
	CloseButton.BackgroundColor3 = _G.Primary;
	CloseButton.BackgroundTransparency = 1;
	CloseButton.AnchorPoint = Vector2.new(1, 0.5);
	CloseButton.Position = UDim2.new(1, -10, 0.5, 0);
	CloseButton.Size = UDim2.new(0, 20, 0, 20);
	CloseButton.Font = Enum.Font.GothamBold;
	CloseButton.Text = "X";
	CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255);
	CloseButton.TextSize = 14;
	CreateRounded(CloseButton, 5);
	
	CloseButton.MouseButton1Click:connect(function()
		STELLAR.Enabled = not STELLAR.Enabled;
	end);
	
	local Tab = Instance.new("Frame");
	Tab.Name = "Tab";
	Tab.Parent = Main;
	Tab.BackgroundColor3 = Color3.fromRGB(30, 30, 35);
	Tab.Position = UDim2.new(0, 8, 0, Top.Size.Y.Offset + 5);
	Tab.BackgroundTransparency = 0;
	Tab.Size = UDim2.new(0, WindowConfig.TabWidth, 0, Config.Size.Y.Offset - Top.Size.Y.Offset - 13);
	CreateRounded(Tab, 5);
	
	local ScrollTab = Instance.new("ScrollingFrame");
	ScrollTab.Name = "ScrollTab";
	ScrollTab.Parent = Tab;
	ScrollTab.Active = true;
	ScrollTab.BackgroundColor3 = Color3.fromRGB(30, 30, 35);
	ScrollTab.Position = UDim2.new(0, 0, 0, 0);
	ScrollTab.BackgroundTransparency = 1;
	ScrollTab.Size = UDim2.new(1, 0, 1, 0);
	ScrollTab.ScrollBarThickness = 3;
	ScrollTab.ScrollingDirection = Enum.ScrollingDirection.Y;
	
	local TabListLayout = Instance.new("UIListLayout");
	TabListLayout.Name = "TabListLayout";
	TabListLayout.Parent = ScrollTab;
	TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
	TabListLayout.Padding = UDim.new(0, 3);
	
	local Page = Instance.new("Frame");
	Page.Name = "Page";
	Page.Parent = Main;
	Page.BackgroundColor3 = _G.Dark;
	Page.Position = UDim2.new(0, Tab.Size.X.Offset + 13, 0, Top.Size.Y.Offset + 5);
	Page.Size = UDim2.new(0, Config.Size.X.Offset - Tab.Size.X.Offset - 18, 0, Config.Size.Y.Offset - Top.Size.Y.Offset - 13);
	Page.BackgroundTransparency = 0;
	CreateRounded(Page, 5);
	
	local MainPage = Instance.new("Frame");
	MainPage.Name = "MainPage";
	MainPage.Parent = Page;
	MainPage.ClipsDescendants = true;
	MainPage.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	MainPage.BackgroundTransparency = 1;
	MainPage.Size = UDim2.new(1, 0, 1, 0);
	
	local PageList = Instance.new("Folder");
	PageList.Name = "PageList";
	PageList.Parent = MainPage;
	
	local UIPageLayout = Instance.new("UIPageLayout");
	UIPageLayout.Parent = PageList;
	UIPageLayout.SortOrder = Enum.SortOrder.LayoutOrder;
	UIPageLayout.EasingDirection = Enum.EasingDirection.InOut;
	UIPageLayout.EasingStyle = Enum.EasingStyle.Quad;
	UIPageLayout.FillDirection = Enum.FillDirection.Vertical;
	UIPageLayout.Padding = UDim.new(0, 5);
	UIPageLayout.TweenTime = 0.2;
	UIPageLayout.GamepadInputEnabled = false;
	UIPageLayout.ScrollWheelInputEnabled = false;
	UIPageLayout.TouchInputEnabled = false;
	
	MakeDraggable(Top, Main);
	
	UserInputService.InputBegan:Connect(function(input)
		if input.KeyCode == Enum.KeyCode.Insert then
			STELLAR.Enabled = not STELLAR.Enabled;
		end;
	end);
	
	local uitab = {};
	local firstTab = true;
	
	function uitab:Tab(text)
		local TabButton = Instance.new("TextButton");
		TabButton.Parent = ScrollTab;
		TabButton.Name = text .. "Unique";
		TabButton.Text = "";
		TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45);
		TabButton.BackgroundTransparency = 0;
		TabButton.Size = UDim2.new(1, 0, 0, 30);
		TabButton.Font = Enum.Font.Gotham;
		TabButton.TextColor3 = Color3.fromRGB(255, 255, 255);
		TabButton.TextSize = 12;
		TabButton.TextTransparency = 0.3;
		CreateRounded(TabButton, 5);
		
		local Title = Instance.new("TextLabel");
		Title.Parent = TabButton;
		Title.Name = "Title";
		Title.BackgroundColor3 = Color3.fromRGB(150, 150, 150);
		Title.BackgroundTransparency = 1;
		Title.Position = UDim2.new(0.5, 0, 0.5, 0);
		Title.Size = UDim2.new(0, 80, 0, 20);
		Title.Font = Enum.Font.Gotham;
		Title.Text = text;
		Title.AnchorPoint = Vector2.new(0.5, 0.5);
		Title.TextColor3 = Color3.fromRGB(255, 255, 255);
		Title.TextTransparency = 0.3;
		Title.TextSize = 12;
		
		local MainFramePage = Instance.new("ScrollingFrame");
		MainFramePage.Name = text .. "_Page";
		MainFramePage.Parent = PageList;
		MainFramePage.Active = true;
		MainFramePage.BackgroundColor3 = _G.Dark;
		MainFramePage.Position = UDim2.new(0, 0, 0, 0);
		MainFramePage.BackgroundTransparency = 1;
		MainFramePage.Size = UDim2.new(1, 0, 1, 0);
		MainFramePage.ScrollBarThickness = 3;
		MainFramePage.ScrollingDirection = Enum.ScrollingDirection.Y;
		
		local UIPadding = Instance.new("UIPadding");
		UIPadding.Parent = MainFramePage;
		UIPadding.PaddingLeft = UDim.new(0, 8);
		UIPadding.PaddingRight = UDim.new(0, 8);
		UIPadding.PaddingTop = UDim.new(0, 8);
		
		local UIListLayout = Instance.new("UIListLayout");
		UIListLayout.Padding = UDim.new(0, 5);
		UIListLayout.Parent = MainFramePage;
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder;
		
		TabButton.MouseButton1Click:Connect(function()
			for i, v in next, ScrollTab:GetChildren() do
				if v:IsA("TextButton") then
					(TweenService:Create(v, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
						BackgroundColor3 = Color3.fromRGB(40, 40, 45)
					})):Play();
					(TweenService:Create(v.Title, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
						TextTransparency = 0.3
					})):Play();
				end;
			end;
			
			(TweenService:Create(TabButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				BackgroundColor3 = Color3.fromRGB(50, 50, 60)
			})):Play();
			(TweenService:Create(Title, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				TextTransparency = 0
			})):Play();
			
			for i, v in next, PageList:GetChildren() do
				currentpage = string.gsub(TabButton.Name, "Unique", "") .. "_Page";
				if v.Name == currentpage then
					UIPageLayout:JumpTo(v);
				end;
			end;
		end);
		
		if firstTab then
			firstTab = false;
			(TweenService:Create(TabButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				BackgroundColor3 = Color3.fromRGB(50, 50, 60)
			})):Play();
			(TweenService:Create(Title, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				TextTransparency = 0
			})):Play();
			UIPageLayout:JumpToIndex(1);
		end;
		
		(game:GetService("RunService")).Stepped:Connect(function()
			pcall(function()
				MainFramePage.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y + 10);
				ScrollTab.CanvasSize = UDim2.new(0, 0, 0, TabListLayout.AbsoluteContentSize.Y + 10);
			end);
		end);
		
		local main = {};
		
		function main:Button(text, callback)
			local Button = Instance.new("TextButton");
			Button.Name = "Button";
			Button.Parent = MainFramePage;
			Button.BackgroundColor3 = _G.Primary;
			Button.BackgroundTransparency = 0.8;
			Button.Size = UDim2.new(1, 0, 0, 30);
			Button.Font = Enum.Font.Gotham;
			Button.Text = text;
			Button.TextColor3 = Color3.fromRGB(255, 255, 255);
			Button.TextSize = 13;
			Button.AutoButtonColor = false;
			CreateRounded(Button, 5);
			
			Button.MouseButton1Click:Connect(function()
				callback();
			end);
			
			Button.MouseEnter:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundTransparency = 0.7}):Play();
			end);
			
			Button.MouseLeave:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundTransparency = 0.8}):Play();
			end);
		end;
		
		function main:Toggle(text, config, callback)
			config = config or false;
			local toggled = config;
			
			local Button = Instance.new("TextButton");
			Button.Name = "Button";
			Button.Parent = MainFramePage;
			Button.BackgroundColor3 = _G.Primary;
			Button.BackgroundTransparency = 0.8;
			Button.AutoButtonColor = false;
			Button.Font = Enum.Font.SourceSans;
			Button.Text = "";
			Button.TextColor3 = Color3.fromRGB(0, 0, 0);
			Button.TextSize = 11;
			Button.Size = UDim2.new(1, 0, 0, 30);
			CreateRounded(Button, 5);
			
			local Title = Instance.new("TextLabel");
			Title.Parent = Button;
			Title.BackgroundColor3 = Color3.fromRGB(150, 150, 150);
			Title.BackgroundTransparency = 1;
			Title.Size = UDim2.new(1, -40, 1, 0);
			Title.Font = Enum.Font.Gotham;
			Title.Text = text;
			Title.TextColor3 = Color3.fromRGB(255, 255, 255);
			Title.TextSize = 13;
			Title.TextXAlignment = Enum.TextXAlignment.Left;
			Title.Position = UDim2.new(0, 10, 0, 0);
			
			local ToggleFrame = Instance.new("Frame");
			ToggleFrame.Name = "ToggleFrame";
			ToggleFrame.Parent = Button;
			ToggleFrame.BackgroundColor3 = _G.Dark;
			ToggleFrame.BackgroundTransparency = 0;
			ToggleFrame.Position = UDim2.new(1, -35, 0.5, 0);
			ToggleFrame.Size = UDim2.new(0, 25, 0, 15);
			ToggleFrame.AnchorPoint = Vector2.new(1, 0.5);
			CreateRounded(ToggleFrame, 10);
			
			local Circle = Instance.new("Frame");
			Circle.Name = "Circle";
			Circle.Parent = ToggleFrame;
			Circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
			Circle.BackgroundTransparency = 0;
			Circle.Position = UDim2.new(0, 2, 0.5, 0);
			Circle.Size = UDim2.new(0, 11, 0, 11);
			Circle.AnchorPoint = Vector2.new(0, 0.5);
			CreateRounded(Circle, 10);
			
			if config == true then
				toggled = true;
				Circle:TweenPosition(UDim2.new(0, 12, 0.5, 0), "Out", "Sine", 0.2, true);
				TweenService:Create(ToggleFrame, TweenInfo.new(0.2), {BackgroundColor3 = _G.Third}):Play();
				pcall(callback, toggled);
			end;
			
			Button.MouseButton1Click:Connect(function()
				if toggled == false then
					toggled = true;
					Circle:TweenPosition(UDim2.new(0, 12, 0.5, 0), "Out", "Sine", 0.2, true);
					TweenService:Create(ToggleFrame, TweenInfo.new(0.2), {BackgroundColor3 = _G.Third}):Play();
				else
					toggled = false;
					Circle:TweenPosition(UDim2.new(0, 2, 0.5, 0), "Out", "Sine", 0.2, true);
					TweenService:Create(ToggleFrame, TweenInfo.new(0.2), {BackgroundColor3 = _G.Dark}):Play();
				end;
				pcall(callback, toggled);
			end);
		end;
		
		function main:Label(text)
			local Frame = Instance.new("Frame");
			local Label = Instance.new("TextLabel");
			
			Frame.Name = "Frame";
			Frame.Parent = MainFramePage;
			Frame.BackgroundColor3 = _G.Primary;
			Frame.BackgroundTransparency = 1;
			Frame.Size = UDim2.new(1, 0, 0, 25);
			
			Label.Name = "Label";
			Label.Parent = Frame;
			Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
			Label.BackgroundTransparency = 1;
			Label.Size = UDim2.new(1, 0, 1, 0);
			Label.Font = Enum.Font.Gotham;
			Label.TextColor3 = Color3.fromRGB(225, 225, 225);
			Label.TextSize = 13;
			Label.Text = text;
			Label.TextXAlignment = Enum.TextXAlignment.Left;
			
			local labelfunc = {};
			
			function labelfunc:Set(newtext)
				Label.Text = newtext;
			end;
			
			return labelfunc;
		end;
		
		function main:Seperator(text)
			local Seperator = Instance.new("Frame");
			Seperator.Name = "Seperator";
			Seperator.Parent = MainFramePage;
			Seperator.BackgroundColor3 = _G.Primary;
			Seperator.BackgroundTransparency = 1;
			Seperator.Size = UDim2.new(1, 0, 0, 25);
			
			local Line = Instance.new("Frame");
			Line.Name = "Line";
			Line.Parent = Seperator;
			Line.BackgroundColor3 = Color3.fromRGB(100, 100, 100);
			Line.BorderSizePixel = 0;
			Line.Position = UDim2.new(0, 0, 0.5, 0);
			Line.Size = UDim2.new(1, 0, 0, 1);
			Line.AnchorPoint = Vector2.new(0, 0.5);
			
			if text then
				local TextLabel = Instance.new("TextLabel");
				TextLabel.Parent = Seperator;
				TextLabel.BackgroundColor3 = _G.Dark;
				TextLabel.BackgroundTransparency = 0;
				TextLabel.Size = UDim2.new(0, 60, 0, 18);
				TextLabel.Position = UDim2.new(0.5, 0, 0.5, 0);
				TextLabel.AnchorPoint = Vector2.new(0.5, 0.5);
				TextLabel.Font = Enum.Font.GothamBold;
				TextLabel.Text = text;
				TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255);
				TextLabel.TextSize = 11;
				CreateRounded(TextLabel, 5);
			end;
		end;
		
		function main:Slider(text, min, max, set, callback)
			local Slider = Instance.new("Frame");
			Slider.Name = "Slider";
			Slider.Parent = MainFramePage;
			Slider.BackgroundColor3 = _G.Primary;
			Slider.BackgroundTransparency = 0.8;
			Slider.Size = UDim2.new(1, 0, 0, 40);
			CreateRounded(Slider, 5);
			
			local Title = Instance.new("TextLabel");
			Title.Parent = Slider;
			Title.BackgroundColor3 = Color3.fromRGB(150, 150, 150);
			Title.BackgroundTransparency = 1;
			Title.Position = UDim2.new(0, 10, 0, 5);
			Title.Size = UDim2.new(1, -20, 0, 15);
			Title.Font = Enum.Font.Gotham;
			Title.Text = text;
			Title.TextColor3 = Color3.fromRGB(255, 255, 255);
			Title.TextSize = 12;
			Title.TextXAlignment = Enum.TextXAlignment.Left;
			
			local ValueText = Instance.new("TextLabel");
			ValueText.Parent = Slider;
			ValueText.BackgroundColor3 = Color3.fromRGB(150, 150, 150);
			ValueText.BackgroundTransparency = 1;
			ValueText.Position = UDim2.new(1, -40, 0, 5);
			ValueText.Size = UDim2.new(0, 30, 0, 15);
			ValueText.Font = Enum.Font.Gotham;
			ValueText.Text = tostring(set);
			ValueText.TextColor3 = Color3.fromRGB(255, 255, 255);
			ValueText.TextSize = 12;
			ValueText.TextXAlignment = Enum.TextXAlignment.Right;
			
			local bar = Instance.new("Frame");
			bar.Name = "bar";
			bar.Parent = Slider;
			bar.BackgroundColor3 = Color3.fromRGB(60, 60, 65);
			bar.Size = UDim2.new(1, -20, 0, 4);
			bar.Position = UDim2.new(0, 10, 1, -12);
			bar.BackgroundTransparency = 0;
			CreateRounded(bar, 2);
			
			local bar1 = Instance.new("Frame");
			bar1.Name = "bar1";
			bar1.Parent = bar;
			bar1.BackgroundColor3 = _G.Third;
			bar1.BackgroundTransparency = 0;
			bar1.Size = UDim2.new((set - min) / (max - min), 0, 1, 0);
			CreateRounded(bar1, 2);
			
			local circlebar = Instance.new("Frame");
			circlebar.Name = "circlebar";
			circlebar.Parent = bar1;
			circlebar.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
			circlebar.Position = UDim2.new(1, 0, 0.5, 0);
			circlebar.AnchorPoint = Vector2.new(0.5, 0.5);
			circlebar.Size = UDim2.new(0, 12, 0, 12);
			CreateRounded(circlebar, 6);
			
			local mouse = game.Players.LocalPlayer:GetMouse();
			local uis = game:GetService("UserInputService");
			
			if Value == nil then
				Value = set;
				pcall(function()
					callback(Value);
				end);
			end;
			
			local Dragging = false;
			
			circlebar.InputBegan:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					Dragging = true;
				end;
			end);
			
			bar.InputBegan:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					Dragging = true;
				end;
			end);
			
			UserInputService.InputEnded:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 then
					Dragging = false;
				end;
			end);
			
			UserInputService.InputChanged:Connect(function(Input)
				if Dragging and Input.UserInputType == Enum.UserInputType.MouseMovement then
					local pos = UDim2.new(0, math.clamp((Input.Position.X - bar.AbsolutePosition.X) / bar.AbsoluteSize.X, 0, 1), 0, 0);
					local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
					Value = math.clamp(value, min, max);
					
					bar1.Size = UDim2.new((Value - min) / (max - min), 0, 1, 0);
					ValueText.Text = tostring(Value);
					
					pcall(function()
						callback(Value);
					end);
				end;
			end);
		end;
		
		return main;
	end;
	
	return uitab;
end;

return Update;
