-- NOTHING UI LIBRARY — NOVA v4.1 (Modern Dark, Mobile/PC Safe)
-- Focus of v4.1:
-- 1) Always-visible Dock, default RIGHT side.
-- 2) Robust clamping with SafeArea (avoids Roblox top-left system UI).
-- 3) Window opens centered; re-centers if offscreen; re-clamps on rotation/resize.
-- 4) Click-vs-drag threshold for Dock; single-finger drag only.
-- 5) Full original API preserved.

local NothingLibrary = {}
NothingLibrary.__index = NothingLibrary

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local Lighting = game:GetService("Lighting")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- ############################ UTIL ############################
local function create(className, props, children)
    local o = Instance.new(className)
    for k,v in pairs(props or {}) do o[k]=v end
    for _,c in ipairs(children or {}) do c.Parent=o end
    return o
end

local function viewport()
    local inset = GuiService:GetGuiInset()
    local cam = workspace.CurrentCamera
    local v = cam and cam.ViewportSize or Vector2.new(1920,1080)
    return Vector2.new(v.X - inset.X, v.Y - inset.Y)
end

local function deviceSafePadding()
    -- Extra padding to avoid Roblox mobile top-left core UI (menu/chat etc.)
    local inset = GuiService:GetGuiInset()
    local leftPad = inset.X + 84    -- keep away from top-left cluster
    local topPad  = inset.Y + 70
    local rightPad = 12
    local bottomPad = 12 + (UserInputService.TouchEnabled and 60 or 0) -- bottom buttons on mobile
    return leftPad, topPad, rightPad, bottomPad
end

local function clamp(n,a,b) if n<a then return a elseif n>b then return b else return n end end

local function makeDraggableClamped(handle, target, padding)
    padding = padding or 8
    local dragging=false
    local startPos, startU
    local activeTouch=nil

    local function clampPos(u)
        local vp=viewport()
        local leftPad, topPad, rightPad, bottomPad = deviceSafePadding()
        local minX = leftPad
        local minY = topPad
        local maxX = vp.X - target.AbsoluteSize.X - rightPad
        local maxY = vp.Y - target.AbsoluteSize.Y - bottomPad
        local nx = clamp(u.X.Offset, minX, maxX)
        local ny = clamp(u.Y.Offset, minY, maxY)
        return UDim2.new(0,nx,0,ny)
    end

    handle.InputBegan:Connect(function(i)
        if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
            if UserInputService.TouchEnabled and i.UserInputType==Enum.UserInputType.Touch then
                if #UserInputService:GetTouches()>1 then return end
                activeTouch=i.TouchId
            end
            dragging=true; startPos=i.Position; startU=target.Position
            i.Changed:Connect(function()
                if i.UserInputState==Enum.UserInputState.End then dragging=false activeTouch=nil end
            end)
        end
    end)
    UserInputService.InputChanged:Connect(function(i)
        if not dragging then return end
        if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then
            if activeTouch and i.UserInputType==Enum.UserInputType.Touch and i.TouchId~=activeTouch then return end
            local d=i.Position-startPos
            target.Position = clampPos(UDim2.new(0, startU.X.Offset+d.X, 0, startU.Y.Offset+d.Y))
        end
    end)
    -- Keep clamped when size/viewport changes
    target:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
        target.Position = clampPos(target.Position)
    end)
    workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
        task.defer(function() target.Position = clampPos(target.Position) end)
    end)
end

local function centerWithin(target)
    local vp=viewport()
    local leftPad, topPad, rightPad, bottomPad = deviceSafePadding()
    local x = math.floor((vp.X - target.AbsoluteSize.X)/2)
    local y = math.floor((vp.Y - target.AbsoluteSize.Y)/2)
    x = clamp(x, leftPad, vp.X - target.AbsoluteSize.X - rightPad)
    y = clamp(y, topPad, vp.Y - target.AbsoluteSize.Y - bottomPad)
    target.Position = UDim2.new(0,x,0,y)
end

-- ############################ THEMES ############################
local Themes = {
    DarkNeo = {
        bg = Color3.fromRGB(14,16,22),
        surface = Color3.fromRGB(22,24,32),
        panel = Color3.fromRGB(28,30,40),
        text = Color3.fromRGB(235,240,255),
        subtext = Color3.fromRGB(200,205,225),
        stroke = Color3.fromRGB(145,160,200),
        accent = Color3.fromRGB(102,180,255),
    },
    OLED = {
        bg = Color3.fromRGB(0,0,0),
        surface = Color3.fromRGB(16,16,18),
        panel = Color3.fromRGB(20,22,26),
        text = Color3.fromRGB(240,244,255),
        subtext = Color3.fromRGB(208,212,230),
        stroke = Color3.fromRGB(120,135,190),
        accent = Color3.fromRGB(70,160,255),
    }
}

local function pickAutoTheme()
    local t = Lighting.ClockTime or 13
    return (t>=18 or t<6) and "OLED" or "DarkNeo"
end

-- ############################ NOTIFY ############################
local NotificationLib = {}
NotificationLib.__index = NotificationLib
function NothingLibrary.Notification()
    local self=setmetatable({}, NotificationLib)
    self.Gui=create("ScreenGui",{Name="NovaNotify",ResetOnSpawn=false,ZIndexBehavior=Enum.ZIndexBehavior.Sibling,IgnoreGuiInset=true})
    self.Holder=create("Frame",{Parent=self.Gui,BackgroundTransparency=1,AnchorPoint=Vector2.new(1,1),Position=UDim2.new(1,-16,1,-16),Size=UDim2.new(0,340,1,-32)},{create("UIListLayout",{SortOrder=Enum.SortOrder.LayoutOrder,Padding=UDim.new(0,8),HorizontalAlignment=Enum.HorizontalAlignment.Right,VerticalAlignment=Enum.VerticalAlignment.Bottom})})
    self.Gui.Parent=PlayerGui; return self
end
function NotificationLib.new(self,cfg)
    cfg=cfg or {}; local dur=tonumber(cfg.Duration or 4)
    local card=create("Frame",{Parent=self.Holder,Size=UDim2.new(0,340,0,70),BackgroundColor3=Color3.fromRGB(16,18,24),BorderSizePixel=0},{create("UICorner",{CornerRadius=UDim.new(0,12)}),create("UIStroke",{Thickness=1,Transparency=0.6,Color=Color3.fromRGB(140,150,190)})})
    if cfg.Icon then create("ImageLabel",{Parent=card,BackgroundTransparency=1,Size=UDim2.new(0,22,0,22),Position=UDim2.new(0,12,0,10),Image=cfg.Icon}) end
    create("TextLabel",{Parent=card,BackgroundTransparency=1,Position=UDim2.new(0,cfg.Icon and 40 or 12,0,8),Size=UDim2.new(1,-50,0,22),Font=Enum.Font.GothamSemibold,Text=tostring(cfg.Title or "Notification"),TextSize=15,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Color3.fromRGB(235,240,255)})
    create("TextLabel",{Parent=card,BackgroundTransparency=1,Position=UDim2.new(0,cfg.Icon and 40 or 12,0,32),Size=UDim2.new(1,-50,0,20),Font=Enum.Font.Gotham,Text=tostring(cfg.Description or ""),TextSize=13,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Color3.fromRGB(205,210,230)})
    card.BackgroundTransparency=1 card.Size=UDim2.new(0,340,0,0)
    TweenService:Create(card,TweenInfo.new(0.2,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{BackgroundTransparency=0,Size=UDim2.new(0,340,0,70)}):Play()
    task.delay(dur,function() if card then TweenService:Create(card,TweenInfo.new(0.16,Enum.EasingStyle.Quad,Enum.EasingDirection.In),{BackgroundTransparency=1,Size=UDim2.new(0,340,0,0)}):Play() task.wait(0.17) if card then card:Destroy() end end end)
end

-- ############################ AMBIENT (optional) ############################
local function startAmbient(root,cfg)
    cfg=cfg or {} ; if (cfg.Mode or "None")=="None" then return function() end end
    local mode=cfg.Mode ; local rate=cfg.Rate or 4 ; local maxAlive=cfg.Max or 80
    local holder=create("Frame",{Parent=root,BackgroundTransparency=1,Size=UDim2.fromScale(1,1),ClipsDescendants=true,ZIndex=3,Name="Ambient"})
    local running,alive,accum=true,0,0
    local function spawnOne()
        if not running or alive>=maxAlive then return end
        alive+=1
        local snow=(mode=="Snow")
        local area=root.AbsoluteSize
        local lbl=create("TextLabel",{Parent=holder,BackgroundTransparency=1,Text=(snow and "❄" or "•"),Font=Enum.Font.GothamBold,TextSize=snow and math.random(11,16) or math.random(8,12),TextColor3=snow and Color3.fromRGB(230,240,255) or Color3.fromRGB(170,200,255),Position=UDim2.new(0,math.random(-10,area.X+10),0,-18),Size=UDim2.new(0,20,0,20),Rotation=snow and math.random(-14,14) or 0,ZIndex=3})
        local t=snow and math.random(80,120)/100 or math.random(48,70)/100
        local xoff=snow and math.random(-28,28) or math.random(-6,6)
        TweenService:Create(lbl,TweenInfo.new(t,Enum.EasingStyle.Linear),{Position=UDim2.new(0,lbl.Position.X.Offset+xoff,0,area.Y+24),TextTransparency=0.15}):Play()
        task.delay(t,function() if lbl then lbl:Destroy() end alive=math.max(0,alive-1) end)
    end
    local conn=RunService.Heartbeat:Connect(function(dt) if not running then return end accum+=dt*rate while accum>=1 do accum-=1 spawnOne() end end)
    return function() running=false if conn then conn:Disconnect() end if holder then holder:Destroy() end end
end

-- ############################ MAIN ############################
function NothingLibrary.new(cfg)
    cfg=cfg or {}
    local Keybind=cfg.Keybind or Enum.KeyCode.LeftControl
    local Title=cfg.Title or "Nothing UI"
    local Description=cfg.Description or "Nova v4.1"
    local Logo=cfg.Logo
    local DockImage=cfg.DockImage or Logo
    local DockSide=cfg.DockSide or "Right"
    local ThemeName=cfg.Theme or pickAutoTheme()
    local Theme=(Themes[ThemeName] or Themes.DarkNeo)
    local Scale=math.clamp(tonumber(cfg.Scale or 0.92),0.6,1.2)
    local Density=cfg.Density or "compact"
    local Glass=math.clamp(tonumber(cfg.Glass or 0.12),0,1)
    local Resizable=(cfg.Resizable ~= false)
    local PersistentEffect=cfg.PersistentEffect or {Mode="None"}
    local SaveKey=tostring(cfg.SaveKey or "nova_default")

    local self=setmetatable({}, {__index=NothingLibrary})

    self.Gui=create("ScreenGui",{Name="Nothing_Nova_v4_1",ResetOnSpawn=false,ZIndexBehavior=Enum.ZIndexBehavior.Sibling,IgnoreGuiInset=true})
    self.Gui.Parent=PlayerGui

    -- Dock: default on RIGHT middle
    self.Dock=create("Frame",{Parent=self.Gui,Name="Dock",Size=UDim2.new(0,52,0,52),Position=(DockSide=="Left") and UDim2.new(0,16,0.5,-26) or UDim2.new(1,-68,0.5,-26),BackgroundColor3=Theme.panel,BorderSizePixel=0},{
        create("UICorner",{CornerRadius=UDim.new(0,12)}),
        create("UIStroke",{Color=Theme.stroke,Transparency=0.5,Thickness=1}),
        create("ImageLabel",{Name="Icon",BackgroundTransparency=1,Size=UDim2.new(1,-12,1,-12),Position=UDim2.new(0,6,0,6),Image=DockImage or "rbxassetid://7733960981"})
    })
    self.Dock.Active=true
    makeDraggableClamped(self.Dock, self.Dock, 8)
    -- click/drag threshold
    do
        local downPos=nil; local moved=0; local down=false
        self.Dock.InputBegan:Connect(function(i)
            if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
                down=true; moved=0; downPos=i.Position
                i.Changed:Connect(function()
                    if i.UserInputState==Enum.UserInputState.End then
                        if moved<6 then self:Toggle() end
                        down=false
                    end
                end)
            end
        end)
        UserInputService.InputChanged:Connect(function(i)
            if down and (i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch) then
                local d=i.Position-downPos
                moved=math.max(moved, math.abs(d.X)+math.abs(d.Y))
            end
        end)
    end

    -- Main window
    self.Main=create("Frame",{Parent=self.Gui,Name="Main",Size=UDim2.new(0,680,0,380),Position=UDim2.new(0,2000,0,2000), -- start offscreen; center on Show
        BackgroundColor3=Theme.bg,BackgroundTransparency=Glass,BorderSizePixel=0,Visible=false},{
        create("UICorner",{CornerRadius=UDim.new(0,16)}),
        create("UIStroke",{Thickness=6,Transparency=0.86,Color=Theme.stroke}),
        create("UIStroke",{Thickness=1,Transparency=0.35,Color=Theme.stroke})
    })
    create("UIScale",{Parent=self.Main,Scale=Scale})

    local Header=create("Frame",{Parent=self.Main,Name="Header",Size=UDim2.new(1,0,0,50),BackgroundColor3=Theme.surface,BackgroundTransparency=Glass+0.05,BorderSizePixel=0},{
        create("UICorner",{CornerRadius=UDim.new(0,16)}),
        create("UIStroke",{Color=Theme.stroke,Transparency=0.8,Thickness=1})
    })
    create("ImageLabel",{Parent=Header,BackgroundTransparency=1,Size=UDim2.new(0,22,0,22),Position=UDim2.new(0,14,0,14),Image=Logo or DockImage or "rbxassetid://7733960981"})
    create("TextLabel",{Parent=Header,BackgroundTransparency=1,Position=UDim2.new(0,42,0,8),Size=UDim2.new(1,-120,0,20),Font=Enum.Font.GothamSemibold,Text=tostring(Title),TextSize=16,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Theme.text})
    create("TextLabel",{Parent=Header,BackgroundTransparency=1,Position=UDim2.new(0,42,0,28),Size=UDim2.new(1,-120,0,18),Font=Enum.Font.Gotham,Text=tostring(Description),TextSize=13,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Theme.subtext})
    makeDraggableClamped(Header, self.Main, 12)

    local SideToggle=create("TextButton",{Parent=Header,Text="≡",Font=Enum.Font.GothamBold,TextSize=18,TextColor3=Theme.text,BackgroundTransparency=1,Size=UDim2.new(0,32,0,32),Position=UDim2.new(1,-40,0,9)})

    local TabBar=create("Frame",{Parent=self.Main,Name="TabBar",BackgroundTransparency=1,Size=UDim2.new(0,172,1,-50),Position=UDim2.new(0,0,0,50)},{create("UIListLayout",{Padding=UDim.new(0,6),SortOrder=Enum.SortOrder.LayoutOrder})})
    local Content=create("Frame",{Parent=self.Main,Name="Content",BackgroundTransparency=1,Size=UDim2.new(1,-180,1,-60),Position=UDim2.new(0,180,0,56),ClipsDescendants=true})

    if Resizable then
        local knob=create("Frame",{Parent=self.Main,Name="Resizer",Size=UDim2.new(0,16,0,16),Position=UDim2.new(1,-12,1,-12),BackgroundColor3=Theme.panel,BackgroundTransparency=Glass+0.04,BorderSizePixel=0},{create("UICorner",{CornerRadius=UDim.new(0,4)}),create("UIStroke",{Color=Theme.stroke,Transparency=0.6,Thickness=1})})
        local dragging=false
        knob.InputBegan:Connect(function(i)
            if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
                dragging=true
                local start=i.Position
                local startSize=self.Main.Size
                i.Changed:Connect(function() if i.UserInputState==Enum.UserInputState.End then dragging=false end end)
                UserInputService.InputChanged:Connect(function(mv)
                    if dragging and (mv.UserInputType==Enum.UserInputType.MouseMovement or mv.UserInputType==Enum.UserInputType.Touch) then
                        local d=mv.Position-start
                        local vp=viewport()
                        local leftPad,topPad,rightPad,bottomPad=deviceSafePadding()
                        local maxW=vp.X-leftPad-rightPad
                        local maxH=vp.Y-topPad-bottomPad
                        local w=math.clamp(startSize.X.Offset+d.X, 520, maxW)
                        local h=math.clamp(startSize.Y.Offset+d.Y, 320, maxH)
                        self.Main.Size=UDim2.new(0,w,0,h)
                    end
                end)
            end
        end)
    end

    -- Sidebar collapse
    local collapsed=false
    local function applySidebar()
        if collapsed then
            TweenService:Create(TabBar,TweenInfo.new(0.18),{Size=UDim2.new(0,56,1,-50)}):Play()
            TweenService:Create(Content,TweenInfo.new(0.18),{Size=UDim2.new(1,-64,1,-60),Position=UDim2.new(0,64,0,56)}):Play()
            for _,c in ipairs(TabBar:GetChildren()) do if c:IsA("TextButton") then c.Label.Visible=false c.Size=UDim2.new(1,-10,0,34) end end
        else
            TweenService:Create(TabBar,TweenInfo.new(0.18),{Size=UDim2.new(0,172,1,-50)}):Play()
            TweenService:Create(Content,TweenInfo.new(0.18),{Size=UDim2.new(1,-180,1,-60),Position=UDim2.new(0,180,0,56)}):Play()
            for _,c in ipairs(TabBar:GetChildren()) do if c:IsA("TextButton") then c.Label.Visible=true c.Size=UDim2.new(1,-14,0,36) end end
        end
    end
    SideToggle.MouseButton1Click:Connect(function() collapsed=not collapsed applySidebar() end)

    -- Ambient
    local _stopAmbient=startAmbient(self.Main, PersistentEffect)

    -- Center/Clamp on viewport changes
    local function ensureOnscreen()
        local vp=viewport()
        local leftPad,topPad,rightPad,bottomPad=deviceSafePadding()
        local pos=self.Main.Position
        local x=clamp(pos.X.Offset, leftPad, vp.X - self.Main.AbsoluteSize.X - rightPad)
        local y=clamp(pos.Y.Offset, topPad, vp.Y - self.Main.AbsoluteSize.Y - bottomPad)
        self.Main.Position=UDim2.new(0,x,0,y)
    end
    workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(function()
        task.defer(ensureOnscreen)
    end)

    -- Show/Hide
    self._open=false
    function self:Toggle() if self._open then self:Hide() else self:Show() end end
    function self:Show()
        if self._open then return end
        self._open=true
        self.Main.Visible=true
        centerWithin(self.Main)
        TweenService:Create(self.Main, TweenInfo.new(0.18, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = Glass}):Play()
    end
    function self:Hide()
        if not self._open then return end
        self._open=false
        TweenService:Create(self.Main, TweenInfo.new(0.16, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
        task.delay(0.17,function() if not self._open then self.Main.Visible=false end end)
    end
    UserInputService.InputBegan:Connect(function(i,gpe) if gpe then return end if i.KeyCode==Keybind then self:Toggle() end end)

    -- Tabs/Sections (same API)
    self._tabs={}
    local padY=(Density=="compact") and 6 or 10
    function self:NewTab(cfgT)
        cfgT=cfgT or {}
        local title=tostring(cfgT.Title or "Tab")
        local icon=cfgT.Icon
        local btn=create("TextButton",{Parent=TabBar,Size=UDim2.new(1,-14,0,36),Position=UDim2.new(0,7,0,0),BackgroundColor3=Theme.panel,AutoButtonColor=true,BorderSizePixel=0,Text=""},{
            create("UICorner",{CornerRadius=UDim.new(0,12)}),
            create("UIStroke",{Color=Theme.stroke,Transparency=0.7,Thickness=1}),
            create("ImageLabel",{Name="Icon",BackgroundTransparency=1,Size=UDim2.new(0,20,0,20),Position=UDim2.new(0,10,0.5,-10),Image=icon or "rbxassetid://7733960981"}),
            create("TextLabel",{Name="Label",BackgroundTransparency=1,Size=UDim2.new(1,-38,1,-8),Position=UDim2.new(0,34,0,4),Font=Enum.Font.GothamSemibold,Text=title,TextSize=14,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Theme.text})
        })
        local page=create("Frame",{Parent=Content,BackgroundTransparency=1,Size=UDim2.fromScale(1,1),Visible=false})
        local left=create("ScrollingFrame",{Parent=page,BackgroundTransparency=1,Size=UDim2.new(0.5,-6,1,0),CanvasSize=UDim2.new(0,0,0,0),ScrollBarThickness=4},{create("UIListLayout",{Padding=UDim.new(0,padY),SortOrder=Enum.SortOrder.LayoutOrder})})
        local right=create("ScrollingFrame",{Parent=page,BackgroundTransparency=1,Position=UDim2.new(0.5,6,0,0),Size=UDim2.new(0.5,-6,1,0),CanvasSize=UDim2.new(0,0,0,0),ScrollBarThickness=4},{create("UIListLayout",{Padding=UDim.new(0,padY),SortOrder=Enum.SortOrder.LayoutOrder})})

        local function showTab() for _,t in pairs(self._tabs) do t.page.Visible=false t.btn.BackgroundColor3=Theme.panel end page.Visible=true btn.BackgroundColor3=Theme.surface end
        btn.MouseButton1Click:Connect(showTab)

        local tabObj={}; tabObj.page=page; tabObj.btn=btn
        function tabObj:NewSection(cfgS)
            cfgS=cfgS or {}
            local st=tostring(cfgS.Title or "Section")
            local parent=(cfgS.Position=="Right") and right or left
            local card=create("Frame",{Parent=parent,BackgroundColor3=Theme.surface,Size=UDim2.new(1,-4,0,52),BorderSizePixel=0},{
                create("UICorner",{CornerRadius=UDim.new(0,12)}),
                create("UIStroke",{Color=Theme.stroke,Transparency=0.78,Thickness=1}),
                create("Frame",{Name="Header",BackgroundTransparency=1,Size=UDim2.new(1,-14,0,30),Position=UDim2.new(0,7,0,6)},{
                    create("TextLabel",{Name="Title",BackgroundTransparency=1,Size=UDim2.new(1,0,1,0),Font=Enum.Font.GothamSemibold,Text=st,TextSize=14,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Theme.text})
                }),
                create("Frame",{Name="Body",BackgroundTransparency=1,Position=UDim2.new(0,8,0,36),Size=UDim2.new(1,-16,0,8)},{create("UIListLayout",{Padding=UDim.new(0,(Density=='compact') and 6 or 10),SortOrder=Enum.SortOrder.LayoutOrder})})
            })
            local body=card.Body
            local function autoSize()
                local h=46
                for _,c in ipairs(body:GetChildren()) do if c:IsA("GuiObject") then h+=c.AbsoluteSize.Y + ((Density=='compact') and 6 or 10) end end
                h=math.max(h,52)
                TweenService:Create(card,TweenInfo.new(0.08),{Size=UDim2.new(1,-4,0,h)}):Play()
                parent.CanvasSize=UDim2.new(0,0,0,parent.UIListLayout.AbsoluteContentSize.Y + 16)
            end
            body.ChildAdded:Connect(autoSize) body.ChildRemoved:Connect(autoSize) task.defer(autoSize)

            local section={}
            local function pill(text,height) return create("TextButton",{BackgroundColor3=Theme.panel,Size=UDim2.new(1,0,0,height),BorderSizePixel=0,Text=text,Font=Enum.Font.GothamSemibold,TextSize=13,TextColor3=Theme.text},{create("UICorner",{CornerRadius=UDim.new(0,10)})}) end
            function section:NewTitle(t) local l=create("TextLabel",{Parent=body,BackgroundTransparency=1,Size=UDim2.new(1,0,0,20),Font=Enum.Font.GothamSemibold,Text=tostring(t or ""),TextSize=13,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Theme.subtext}); autoSize(); return l end
            function section:NewButton(cfg) cfg=cfg or {} local b=pill(tostring(cfg.Title or 'Button'),30) b.Parent=body b.MouseButton1Click:Connect(function() task.spawn(function() pcall(cfg.Callback or function() end) end) end) autoSize() return b end
            function section:NewToggle(cfg) cfg=cfg or {} local state=(cfg.Default==true) local row=create("Frame",{Parent=body,BackgroundTransparency=1,Size=UDim2.new(1,0,0,28)},{create("TextLabel",{BackgroundTransparency=1,Size=UDim2.new(1,-58,1,0),Font=Enum.Font.Gotham,Text=tostring(cfg.Title or 'Toggle'),TextSize=13,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Theme.text}), create("TextButton",{Name='Switch',BackgroundColor3=state and Theme.accent or Color3.fromRGB(60,64,78),Size=UDim2.new(0,44,0,20),Position=UDim2.new(1,-48,0.5,-10),BorderSizePixel=0,Text=''},{create("UICorner",{CornerRadius=UDim.new(1,99)}), create("Frame",{Name='Knob',BackgroundColor3=Color3.fromRGB(245,248,255),Size=UDim2.new(0,16,0,16),Position=UDim2.new(state and 1 or 0, state and -18 or 2,0.5,-8),BorderSizePixel=0},{create("UICorner",{CornerRadius=UDim.new(1,99)})})})}) local sw=row.Switch local knob=sw.Knob local function set(v,fromUser) state=v and true or false TweenService:Create(sw,TweenInfo.new(0.1),{BackgroundColor3=state and Theme.accent or Color3.fromRGB(60,64,78)}):Play() TweenService:Create(knob,TweenInfo.new(0.1),{Position=UDim2.new(state and 1 or 0, state and -18 or 2,0.5,-8)}):Play() if fromUser then task.spawn(function() pcall(cfg.Callback or function() end,state) end) end end sw.MouseButton1Click:Connect(function() set(not state,true) end) autoSize() return {Set=function(_,v) set(v,false) end, Get=function() return state end} end
            function section:NewSlider(cfg) cfg=cfg or {} local title=tostring(cfg.Title or 'Slider') local min=tonumber(cfg.Min or 0) local max=tonumber(cfg.Max or 100) local val=math.clamp(tonumber(cfg.Default or min),min,max) local cb=cfg.Callback or function() end local row=create("Frame",{Parent=body,BackgroundTransparency=1,Size=UDim2.new(1,0,0,40)}) local label=create("TextLabel",{Parent=row,BackgroundTransparency=1,Size=UDim2.new(1,0,0,16),Font=Enum.Font.Gotham,Text=string.format('%s: %s',title,tostring(val)),TextSize=13,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Theme.text}) local bar=create("Frame",{Parent=row,Name='Bar',BackgroundColor3=Color3.fromRGB(48,52,66),Size=UDim2.new(1,0,0,8),Position=UDim2.new(0,0,0,22),BorderSizePixel=0},{create("UICorner",{CornerRadius=UDim.new(0,6)}), create("Frame",{Name='Fill',BackgroundColor3=Theme.accent,Size=UDim2.new((val-min)/(max-min),0,1,0),BorderSizePixel=0},{create("UICorner",{CornerRadius=UDim.new(0,6)})})}) local fill=bar.Fill local dragging=false local function setFromX(x) local rel=math.clamp((x - bar.AbsolutePosition.X)/math.max(1,bar.AbsoluteSize.X),0,1) val=min + rel*(max-min) val=math.floor(val*10+0.5)/10 fill.Size=UDim2.new((val-min)/(max-min),0,1,0) label.Text=string.format('%s: %s',title,tostring(val)) task.spawn(function() pcall(cb,val) end) end bar.InputBegan:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then dragging=true setFromX(UserInputService:GetMouseLocation().X) end end) bar.InputEnded:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then dragging=false end end) UserInputService.InputChanged:Connect(function(i) if dragging and (i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch) then setFromX(UserInputService:GetMouseLocation().X) end end) autoSize() return {Set=function(_,v) v=math.clamp(tonumber(v) or min,min,max) val=v fill.Size=UDim2.new((val-min)/(max-min),0,1,0) label.Text=string.format('%s: %s',title,tostring(val)) end, Get=function() return val end} end
            function section:NewKeybind(cfg) cfg=cfg or {} local key=cfg.Default or Enum.KeyCode.RightAlt local row=pill(string.format('%s: %s',tostring(cfg.Title or 'Keybind'), key.Name),30) row.Parent=body local waiting=false row.MouseButton1Click:Connect(function() if waiting then return end waiting=true row.Text=string.format('%s: ...',tostring(cfg.Title or 'Keybind')) local conn; conn=UserInputService.InputBegan:Connect(function(i,gpe) if gpe then return end if i.KeyCode ~= Enum.KeyCode.Unknown then key=i.KeyCode row.Text=string.format('%s: %s',tostring(cfg.Title or 'Keybind'), key.Name) waiting=false conn:Disconnect() end end) end) UserInputService.InputBegan:Connect(function(i,gpe) if gpe then return end if i.KeyCode==key then task.spawn(function() pcall(cfg.Callback or function() end,key) end) end end) autoSize() return {Set=function(_,k) key=k or key row.Text=string.format('%s: %s',tostring(cfg.Title or 'Keybind'), key.Name) end, Get=function() return key end} end
            function section:NewDropdown(cfgD) cfgD=cfgD or {} local title=tostring(cfgD.Title or 'Dropdown') local data=cfgD.Data or {} local value=cfgD.Default local cb=cfgD.Callback or function() end local root=create("Frame",{Parent=body,BackgroundTransparency=1,Size=UDim2.new(1,0,0,32)}) local btn=pill(string.format('%s: %s',title,tostring(value or '')),30) btn.Parent=root local list=create("Frame",{Parent=root,BackgroundColor3=Theme.surface,Size=UDim2.new(1,0,0,0),Position=UDim2.new(0,0,0,34),BorderSizePixel=0,Visible=false,ZIndex=5},{create("UICorner",{CornerRadius=UDim.new(0,10)}), create("UIStroke",{Color=Theme.stroke,Transparency=0.7,Thickness=1})}) local sc=create("ScrollingFrame",{Parent=list,BackgroundTransparency=1,Size=UDim2.fromScale(1,1),CanvasSize=UDim2.new(0,0,0,0),ScrollBarThickness=4,ZIndex=6},{create("UIListLayout",{Padding=UDim.new(0,4),SortOrder=Enum.SortOrder.LayoutOrder})}) local overlay=create("TextButton",{Parent=self.Gui,BackgroundTransparency=1,Size=UDim2.fromScale(1,1),Text='',Visible=false,ZIndex=4,AutoButtonColor=false}) local function rebuild() for _,c in ipairs(sc:GetChildren()) do if c:IsA('TextButton') then c:Destroy() end end for _,item in ipairs(data) do local opt=create('TextButton',{Parent=sc,BackgroundTransparency=1,Size=UDim2.new(1,-10,0,24),Position=UDim2.new(0,5,0,0),Text=tostring(item),Font=Enum.Font.Gotham,TextSize=13,TextColor3=Theme.text,ZIndex=6}) opt.MouseButton1Click:Connect(function() value=item btn.Text=string.format('%s: %s',title,tostring(value)) TweenService:Create(list,TweenInfo.new(0.12),{Size=UDim2.new(1,0,0,0)}):Play() task.delay(0.13,function() list.Visible=false overlay.Visible=false end) task.spawn(function() pcall(cb,value) end) end) end local content=sc.UIListLayout.AbsoluteContentSize.Y + 6 sc.CanvasSize=UDim2.new(0,0,0,content) list.Size=UDim2.new(1,0,0,math.clamp(content,40,160)) end rebuild() btn.MouseButton1Click:Connect(function() if list.Visible then TweenService:Create(list,TweenInfo.new(0.12),{Size=UDim2.new(1,0,0,0)}):Play() task.delay(0.13,function() list.Visible=false overlay.Visible=false end) else list.Visible=true overlay.Visible=true rebuild() TweenService:Create(list,TweenInfo.new(0.12),{Size=UDim2.new(1,0,0,list.Size.Y.Offset)}):Play() end end) overlay.MouseButton1Click:Connect(function() if list.Visible then TweenService:Create(list,TweenInfo.new(0.12),{Size=UDim2.new(1,0,0,0)}):Play() task.delay(0.13,function() list.Visible=false overlay.Visible=false end) end end) return {Set=function(_,v) value=v btn.Text=string.format('%s: %s',title,tostring(value)) end, Get=function() return value end, SetData=function(_,arr) data=arr or {} rebuild() end} end
            function section:NewInput(cfgI) cfgI=cfgI or {} local title=tostring(cfgI.Title or 'Input') local placeholder=tostring(cfgI.Placeholder or '') local value=tostring(cfgI.Default or '') local numeric=(cfgI.Numeric==true) local cb=cfgI.Callback or function() end local root=create('Frame',{Parent=body,BackgroundTransparency=1,Size=UDim2.new(1,0,0,34)}) local label=create('TextLabel',{Parent=root,BackgroundTransparency=1,Size=UDim2.new(1,0,0,14),Font=Enum.Font.Gotham,Text=title,TextSize=12,TextXAlignment=Enum.TextXAlignment.Left,TextColor3=Theme.subtext}) local box=create('TextBox',{Parent=root,BackgroundColor3=Theme.panel,Size=UDim2.new(1,0,0,22),Position=UDim2.new(0,0,0,14),BorderSizePixel=0,Text=value,PlaceholderText=placeholder,Font=Enum.Font.Gotham,TextSize=13,TextColor3=Theme.text,PlaceholderColor3=Color3.fromRGB(150,160,180)},{create('UICorner',{CornerRadius=UDim.new(0,8)})}) if numeric then box.ClearTextOnFocus=false end box.FocusLost:Connect(function(enter) if numeric and box.Text~='' and tonumber(box.Text)==nil then box.Text=value return end value=box.Text task.spawn(function() pcall(cb,value,enter) end) end) return {Set=function(_,v) value=tostring(v or '') box.Text=value end, Get=function() return value end} end

            return section
        end

        table.insert(self._tabs,{btn=btn,page=page})
        if #self._tabs==1 then page.Visible=true btn.BackgroundColor3=Theme.surface end
        return tabObj
    end

    -- Public helpers
    function self:Center() centerWithin(self.Main) end

    return self
end

return NothingLibrary
